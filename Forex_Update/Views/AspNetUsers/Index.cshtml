@model PagedList.IPagedList<Forex_Update.Models.AspNetUser>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @using (Html.BeginForm("Index", "AspnetUsers", FormMethod.Get))
    {
        <div class="form-group">
            <input type="text" name="search" value="@Request.QueryString["search"]" class="" placeholder="" />
            <button type="submit" >search</button>
        </div>
       
    }

</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Email)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.EmailConfirmed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PasswordHash)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SecurityStamp)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().PhoneNumber)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TwoFactorEnabled)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LockoutEndDateUtc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LockoutEnabled)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AccessFailedCount)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().UserName)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.CreateDate)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().UserBallance)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.CurrentStockSymbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrentCryptoSymbol)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Equity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MoneyInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalProfit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Chart)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Refresh)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().Promocode)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Currency)
            </th>*@
        <th>
            @Html.DisplayNameFor(model => model.First().showpassword)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Btcwallet)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.LastLoginTime)
            </th>*@
        <th>
            Action
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.EmailConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PasswordHash)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SecurityStamp)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TwoFactorEnabled)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LockoutEndDateUtc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LockoutEnabled)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccessFailedCount)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.UserBallance)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.CurrentStockSymbol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrentCryptoSymbol)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MoneyInStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalProfit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Chart)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Refresh)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Promocode)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Currency)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.showpassword)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Btcwallet)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>


    }
</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = Request.QueryString["search"] }))