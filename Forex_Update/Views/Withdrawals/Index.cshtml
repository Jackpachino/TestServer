@model PagedList.IPagedList<Forex_Update.Models.Withdrawal>
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<p>
    @using (Html.BeginForm("Index", "Withdrawals", FormMethod.Get))
    {
        <div class="form-group">
            <input type="text" name="search" value="@Request.QueryString["search"]" class="" placeholder="" />
            <button type="submit">search</button>
        </div>

    }

</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().UserId)
        </th>
        <th>
            User Email
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().SSN)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PaymentMethod)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PostalCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().PromoCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Amount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Status)
        </th>

        <th>
            Action
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UseEmail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SSN)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentMethod)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PromoCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @if (item.Status == 0)
                {
                    <span style="font-size: 108% !important; font-weight: 500 !important; background-color:yellow; color:black" class="badge badge-pill badge-warning">Pending</span>
                }
                else if (item.Status == 1)
                {
                    <span style="font-size: 108% !important; font-weight: 500 !important; background-color: green; color: black " class="badge badge-pill badge-success">Approved</span>
                }
                else if (item.Status == 2)
                {
                    <span style="font-size: 108% !important; font-weight: 500 !important; background-color: red; color: black" class="badge badge-pill badge-danger">Rejected</span>
                }
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
@Html.PagedListPager(Model, page => Url.Action("Index", new { page, search = Request.QueryString["search"] }))